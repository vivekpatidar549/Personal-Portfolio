{"version":3,"file":"static/js/1859.d1882dc4.chunk.js","mappings":"gOAGaA,EAAb,0CACI,WAAYC,GAAW,kCACbA,GAFd,oCAII,SAAMC,EAAUC,EAAOC,GACfF,EAASG,KAAKC,UAAYF,IAG9BF,EAASG,KAAKE,OAAS,KAR/B,kBAUI,WACI,IAAMN,EAAYO,KAAKP,UAAWI,EAAOJ,EAAUQ,cAAcC,cAAcC,MAAMN,KAChFA,IAGLJ,EAAUW,OAAOC,eAAiBR,EAAKS,OAASb,EAAUW,OAAOG,cAfzE,sBAiBI,cAjBJ,uBAmBI,SAAUb,GAAU,MACVD,EAAYO,KAAKP,UAAWe,EAAQf,EAAUS,cAAcM,MAAOC,GAAS,iBAACf,QAAD,IAACA,OAAD,EAACA,EAAUQ,qBAAX,QAA4BT,EAAUQ,cAAcC,eAAeO,OACrJ,OAAOA,EAAOC,QAAQC,UAAYH,EAAMI,WAAYC,EAAAA,EAAAA,IAtB3C,OAsB+DJ,EAAOC,QAAQI,QArB/F,6BAuBI,SAAgBC,GACPA,EAAQlB,OACTkB,EAAQlB,KAAO,IAAImB,EAAAA,GAFU,2BAATC,EAAS,iCAATA,EAAS,kBAIjC,IAAK,IAAL,MAAqBA,EAArB,eAA8B,CAAzB,IAAMC,EAAM,KACbH,EAAQlB,KAAKsB,KAAb,OAAkBD,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAQrB,SA5BtC,mBA+BI,SAAMH,GACFA,EAASG,KAAKC,SAAU,EACxB,IAAML,EAAYO,KAAKP,UAAWsB,EAAUtB,EAAUQ,cAAemB,EAAW3B,EAAUS,cAAcM,MAAMI,SAAUN,EAASb,EAAUW,OAAOC,eAAgBgB,EAAcN,EAAQb,cAAcC,MAAMN,KAC5M,GAAKwB,GAAgBf,KAAUA,EAnCF,IAmCyBc,EAAtD,CAGM,IAAAE,EAAc5B,EAAS6B,cAAeC,GAAOC,EAAAA,EAAAA,IAAYL,EAAUE,GAAcI,EAAkBF,EAAOlB,EAAQqB,EAAaN,EAAYtB,OAAUF,EAASH,EAATG,KACvJ2B,EAAOlB,IAGXT,EAAKC,SAAU,EACfD,EAAKE,OAAS2B,EAAkBC,QA1CxC,GAA4BC,EAAAA","sources":["../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js"],"sourcesContent":["import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n"],"names":["Slower","container","particle","delta","force","slow","inRange","factor","this","actualOptions","interactivity","modes","retina","slowModeRadius","radius","pixelRatio","mouse","events","onHover","enable","position","isInArray","mode","options","Slow","sources","source","load","mousePos","slowOptions","particlePos","getPosition","dist","getDistance","proximityFactor","slowFactor","ExternalInteractorBase"],"sourceRoot":""}