{"version":3,"file":"static/js/7758.74aaa5d8.chunk.js","mappings":"oOAAaA,EAAb,WACI,cAAc,eACVC,KAAKC,IAAM,GACXD,KAAKE,KAAM,EAHnB,mCAKI,SAAKC,GACIA,SAGYC,IAAbD,EAAKD,MACLF,KAAKE,IAAMC,EAAKD,UAEAE,IAAhBD,EAAKE,SACLL,KAAKK,OAASF,EAAKE,aAELD,IAAdD,EAAKG,OACLN,KAAKM,KAAOH,EAAKG,WAEKF,IAAtBD,EAAKI,eACLP,KAAKO,aAAeJ,EAAKI,mBAEZH,IAAbD,EAAKF,MACLD,KAAKC,IAAME,EAAKF,UAEDG,IAAfD,EAAKK,QACLR,KAAKQ,MAAQL,EAAKK,YAzB9B,KCCaC,EAAb,WACI,WAAYC,IAAQ,eAChBV,KAAKW,GAAK,iBACVX,KAAKY,QAAUF,EAHvB,iFAKI,mGACUG,QAAQC,UADlB,gCAEW,IAFX,2CALJ,+EASI,SAAYC,EAASC,GACjB,GAAI,OAACA,QAAD,IAACA,GAAAA,EAAQC,QAAb,CAGKF,EAAQE,UACTF,EAAQE,QAAU,IAEtB,IAPyB,EAOnBC,EAAiBH,EAAQE,QAPN,UAQND,EAAOC,SARD,yBAQdE,EARc,QASfC,EAAWF,EAAeG,MAAK,SAACC,GAAD,OAAOA,EAAEhB,OAASa,EAAKb,MAAQgB,EAAErB,MAAQkB,EAAKlB,OACnF,GAAImB,EACAA,EAASG,KAAKJ,OAEb,CACD,IAAMF,EAAU,IAAIlB,EACpBkB,EAAQM,KAAKJ,GACbD,EAAeM,KAAKP,KAR5B,IAAK,EAAL,qBAAmC,IARV,kCATjC,yBA6BI,WACI,OAAO,MA9Bf","sources":["../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js"],"sourcesContent":["export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n"],"names":["Preload","this","src","gif","data","undefined","height","name","replaceColor","width","ImagePreloaderPlugin","engine","id","_engine","Promise","resolve","options","source","preload","preloadOptions","item","existing","find","t","load","push"],"sourceRoot":""}