{"version":3,"file":"static/js/1142.98d1a941.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js"],"sourcesContent":["import { Circle, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach((item) => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === \"circle\"\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, (p) => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, (p) => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],"names":["half","halfPI","Math","PI","processBounce","container","position","radius","area","enabledCb","query","particles","quadTree","particle","Circle","circleBounce","circleBounceDataFromParticle","mass","velocity","Vector","factor","Rectangle","rectBounce","calculateBounds","divBounce","divs","bounceMode","divModeExecute","selector","div","bounceCb","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","tolerance","type","singleSelectorBounce","Bouncer","this","bounce","actualOptions","interactivity","modes","bounceModeDistance","distance","events","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","onHover","enable","hoverMode","mode","onDiv","isInArray","mousePos","mouse","mouseBounce","p","isEnabled","options","isDivModeEnabled","Bounce","sources","source","load","ExternalInteractorBase"],"sourceRoot":""}